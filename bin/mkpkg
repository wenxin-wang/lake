#!/bin/bash

# Make a packed package. Execute command file, generate file list, handle $info/dir. Maybe custom etcs?

. /usr/local/lib/liblake_common
#check_commondirs

usage() {
    echo "usage: $(basename $0) [options] cmdfile"
    echo "-n: no execute, take cmdfile as pkgfname"
    echo "-f: force=yes, force recompiling"
    echo "-c: remove pkgroot and .LIST"
}

gen_list() {
    if [ -e $list -a ! -f $list ]
    then
        quit "$file not a regular file" $E_BADFILE
    fi

    find $dir/ > $list
    sed -i "s@^$dir/@@" $list
    sed -i "/^$/d" $list
}

execute=""
force=""
clean=""
while [ $# -gt 0 ]; do
    case "$1" in
        -h)
            usage
            exit
            ;;
        -n)
            execute=no
            ;;
        -f)
            force=yes
            ;;
        -c)
            clean=yes
            ;;
        -*)
            quit "Unknown option $1" $E_WARGS
            ;;
        *)
            break
            ;;
    esac
    shift
done

if [ $# -lt 1 ]; then
    usage
    exit $E_WARGS
fi

cmdfile=$1
pkgfname=${cmdfile%.}
pkgfile=${pkgfname}.${pkg_suffix}
dir=pkgroot
list=.LIST

if [ _$execute != _no ] && [ ! -e $1 ]; then
        quit "cmdfile $1 not exists" $E_BADDIR
fi

if [ -e $pkgfile ]; then
    if [ "_$force" != "_yes" ]; then
        echo -n "$pkgfile exists. Remove it? "
        read ans
        case "$ans" in
            Y|y)
                rm $pkgfile
                echo "$pkgfile removed."
                ;;
            N|n)
                quit "Exiting..." 0
                ;;
            *)
                quit "Unknown cmd $ans. Exiting." $E_BADRESPONSE
                ;;
        esac
    else
        rm $pkgfile
    fi
fi

if [ _$execute != _no ]; then
    if [ -e $dir ]; then
        if [ ! -d $dir ]; then
            quit "$dir not a directory" $E_BADDIR
        else
            if [ "_$force" != "_yes" ]; then
                echo -n "$dir exists. Remove it? "
                read ans
                case "$ans" in
                    Y|y)
                        rm -r $dir
                        echo "$dir removed."
                        ;;
                    N|n)
                        quit "Exiting..." 0
                        ;;
                    K|k)
                        echo "$dir kept."
                        ;;
                    *)
                        quit "Unknown cmd $ans. Exiting." $E_BADRESPONSE
                        ;;
                esac
            else
                rm -r $dir
            fi
        fi
    fi
    sh $cmdfile || exit $E_CMDFAILED
fi

if [ ! -d $dir ]; then
    quit "$dir not a directory. Exiting..." $E_BADDIR
fi

if [ -f $dir/$infodir/dir ]; then
    rm $dir/$infodir/dir
fi

gen_list

if [ ! -f $list ]; then
    quit "$list not a file. Exiting..." $E_BADFILE
fi

tar -cjf $pkgfile $list -C $dir . || exit $E_CMDFAILED

if [ "_$clean" == "_yes" ]; then
    echo "Removing $dir"
    rm -r $dir
    rm .LIST
fi
