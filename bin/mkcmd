#!/bin/bash

# Remove a package from system
. /usr/local/lib/liblake_common
check_commondirs

usage() {
    echo "usage: $(basename $0) pkgfname"
    echo "-h: this help"
    echo "-e: call editor"
}

while [ $# -gt 0 ]; do
    case "$1" in
        -h)
            usage
            exit
            ;;
        -e)
            edit=true
            ;;
        -n)
            overwite=no
            ;;
        -*)
            quit "Unknown option $1" $E_WARGS
            ;;
        *)
            break
            ;;
    esac
    shift
done

if [ $# -ne 1 ]; then
    usage
    exit E_WARGS
fi

pkgfname=$1
pkgname=${pkgfname%-*}
cmdfile=$pkgfname

write=yes
if [ -e $cmdfile ]; then
    if [ ! -f $cmdfile ]; then
        quit "$cmdfile is not a file! Exiting..." $E_BADFILE
    elif [ "_$overwite" != "_no" ]; then
        echo "$cmdfile exists. What to do? Y/A: append O: overwrite N: do nothing"
        read ans
        case "$ans" in
            Y|y|A|a)
                ;;
            O|o)
                rm $cmdfile
                ;;
            N|n)
                write=no
                ;;
            *)
                quit "Unknown cmd $ans. Exiting." $E_BADRESPONSE
                ;;
        esac
    else
        write=no
    fi
fi


if [ "_$write" == "_yes" ]; then
    cat >> $cmdfile <<EOF &&
#!/bin/bash

pkgfname=$pkgfname
pkgname=$pkgname
EOF

    cat >> $cmdfile <<'EOF' &&
build=$(pwd)
logdir=$build/log
logfile=$logdir/$pkgfname
fakeroot=$build/pkgroot

mkdir -p $logdir $fakeroot &&
. /usr/local/lib/build_funcs &&

function patch_cmd()
{
    :
}

function configure_cmd()
{
    ./configure --prefix=/usr
}

function make_cmd()
{
    make -j4
}

function check_cmd()
{
    make check
}

function install_cmd()
{
    make install
}

EOF

    cat >> $cmdfile <<EOF &&
function cleanup_cmd()
{
    cd \$build &&
    rm -r ${pkgname}/
}

EOF

    cat >> $cmdfile <<'EOF' &&
cd $build &&
EOF
    echo "tar xf ${pkgname}.tar. &&" >> $cmdfile &&
    echo "cd ${pkgname} &&" >> $cmdfile &&
    cat >> $cmdfile <<'EOF'
#run_cmd "${logfile}-patch" 'patch_cmd' &&
run_cmd "${logfile}-conf" 'configure_cmd' &&
run_cmd "${logfile}-make" 'make_cmd' &&
run_cmd "${logfile}-check" 'check_cmd' &&
run_cmd "${logfile}-install" 'install_cmd' &&
#run_cmd "${logfile}-cleanup" 'cleanup_cmd' &&
echo succeed || { echo failed; exit 1; }
EOF
fi

if [ "_$edit" == "_true" ]; then
    $DEFAULT_EDITOR $cmdfile
fi
